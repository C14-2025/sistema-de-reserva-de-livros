name: CI - Backend Node.js
on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

concurrency:
  group: ci-backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # JOB 1: setup (instala dependências e cache)
  setup:
    name: Instalação de dependências
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js (matrix-friendly)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies (backend)
        working-directory: backend
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

  # JOB 2: test (depende do setup)
  test:
    name: Rodar testes e gerar relatório
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Restore node modules cache
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run tests
        working-directory: backend
        run: |
          echo "==> npm test (Jest)"
          npm test -- --runInBand

      - name: Upload test results (raw)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results-${{ github.run_id }}
          path: backend/test-results.json